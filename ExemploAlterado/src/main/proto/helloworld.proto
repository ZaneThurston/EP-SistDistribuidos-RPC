// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  // Sends long
  rpc SayLong (LongRequest) returns (LongReply) {}
  // Sends void
  rpc SayVoid (VoidRequest) returns (VoidReply) {}
  // Sends 8 long
  rpc SayEightLong (EightLongRequest) returns (EightLongReply) {}
}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}

message LongRequest {
  int64 reqLong= 1;
}

message LongReply {
  int64 replyLong = 1;
}

message VoidRequest {
}

message VoidReply {
}

message EightLongRequest {
  repeated int64 reqLongArray = 1;
}

message EightLongReply {
  repeated int64 replyLongArray = 1;
}

message Person {
  string name = 1;
  int32 id = 2;
  string email = 3;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }

  message PhoneNumber {
    string number = 1;
    PhoneType type = 2;
  }

  PhoneNumber phones = 4;
}

message AddressBook {
  Person people = 1;
}
